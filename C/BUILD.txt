Building.
You need any c99 compiler,


for example gcc:
gcc -g -O2 -Iinclude -c -Wall -Wextra ./prbtree/prbtree.c
gcc -g -O2 -Iinclude -c -Wall -Wextra ./prbtree/pcrbtree.c
ar -crs libprbtree.a ./prbtree.o ./pcrbtree.o

or MSVC:
cl /O2 /Iinclude /c /Wall .\prbtree\prbtree.c
cl /O2 /Iinclude /c /Wall .\prbtree\pcrbtree.c
lib /out:prbtree.lib .\prbtree.obj .\pcrbtree.obj



Also, the library can be built with source annotations (restricted pointers, non-null attributes, etc.)

gcc:
gcc -g -O2 -include ../cmn_headers/sal_defs.h -Iinclude -c -Wall -Wextra -fanalyzer ./prbtree/prbtree.c
gcc -g -O2 -include ../cmn_headers/sal_defs.h -Iinclude -c -Wall -Wextra -fanalyzer ./prbtree/pcrbtree.c
ar -crs libprbtree.a ./prbtree.o ./pcrbtree.o

or MSVC:
cl /O2 /FI..\cmn_headers\sal_defs.h /I. /Iinclude /c /Wall /analyze .\prbtree\prbtree.c
cl /O2 /FI..\cmn_headers\sal_defs.h /I. /Iinclude /c /Wall /analyze .\prbtree\pcrbtree.c
lib /out:prbtree.lib .\prbtree.obj .\pcrbtree.obj



Compiling tests.

gcc:
gcc -g -O2 -Iinclude -Wall -Wextra ./prbtree/rbtest.cpp libprbtree.a -DRBTREE_CHECK -o prbtree_test
gcc -g -O2 -Iinclude -Wall -Wextra ./prbtree/rbtest.cpp libprbtree.a -DRBTREE_CHECK -DUSE_PCRBTREE -o pcrbtree_test

or MSVC:
cl /O2 /Iinclude /Wall .\prbtree\rbtest.cpp prbtree.lib /wd4514 /wd4577 /wd4710 /wd4711 /DRBTREE_CHECK /Foprbtree_test
cl /O2 /Iinclude /Wall .\prbtree\rbtest.cpp prbtree.lib /wd4514 /wd4577 /wd4710 /wd4711 /DRBTREE_CHECK /DUSE_PCRBTREE /Fopcrbtree_test
